plugins {
  id 'java'
  id 'war'
}

group 'com.kb'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
  springVersion = '5.3.37'
  lombokVersion = '1.18.30'
  springSecurityVersion='5.8.13'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)  // 자바 17 사용 설정
  }
}

tasks.withType(JavaCompile) {
  options.release.set(17)  // 자바 17로 컴파일
}


dependencies {
  // 스프링
  implementation ("org.springframework:spring-context:${springVersion}")
          { exclude group: 'commons-logging', module: 'commons-logging' }
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation 'javax.inject:javax.inject:1'

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // JSP, SERVLET, JSTL
  implementation('javax.servlet:javax.servlet-api:4.0.1')
  compileOnly 'javax.servlet.jsp:jsp-api:2.1'
  implementation 'javax.servlet:jstl:1.2'

  // Logging
  implementation 'org.slf4j:slf4j-api:2.0.9'
  runtimeOnly 'org.slf4j:jcl-over-slf4j:2.0.9'
  runtimeOnly 'org.slf4j:slf4j-log4j12:2.0.9'
  implementation 'log4j:log4j:1.2.17'

  // xml내 한글 처리
  implementation 'xerces:xercesImpl:2.12.2'

  // Lombok
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  // Jackson - Json 처리
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

  // 데이터베이스
  implementation 'com.mysql:mysql-connector-j:8.0.33'
  implementation 'com.zaxxer:HikariCP:2.7.4'

  implementation "org.springframework:spring-tx:${springVersion}"
  implementation "org.springframework:spring-jdbc:${springVersion}"

  // MyBatis
  implementation 'org.mybatis:mybatis:3.4.6'
  implementation 'org.mybatis:mybatis-spring:1.3.2'

  // log4JDBC
  implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
  implementation 'org.apache.logging.log4j:log4j-api:2.0.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.0.1'

  // 보안
  implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

  // jjwt
  implementation("io.jsonwebtoken:jjwt-api:0.11.5")
  runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
  implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

  // Spring Batch
  implementation 'org.springframework.batch:spring-batch-core:4.3.7'
  implementation 'org.springframework.batch:spring-batch-infrastructure:4.3.7'


  implementation 'org.springframework:spring-web'
  implementation 'com.google.code.gson:gson:2.10.1' // JSON 처리


  // 테스트
  testImplementation "org.springframework:spring-test:${springVersion}"
  testCompileOnly"org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
  implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

  // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
  implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'


}


test {
  useJUnitPlatform()
}

