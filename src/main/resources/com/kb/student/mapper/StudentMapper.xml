<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kb.student.mapper.StudentMapper">
    <resultMap id="StudentResultMap" type="com.kb.student.dto.StudentDTO">
        <id property="stdId" column="std_id"/>
        <result property="tchId" column="tch_id"/>
        <result property="stdName" column="std_name"/>
        <result property="stdNum" column="std_num"/>
        <result property="stdBirth" column="std_birth"/>
        <result property="jobId" column="job_id"/>
        <result property="seed" column="seed"/>
    </resultMap>

<!--    배치용-->
    <select id="getStudentListByJobId" resultMap="StudentResultMap">
        select std_id, std_name, std_num, std_birth, job_id, seed
        from student
        where job_id = 1
        order by std_id
    </select>
<!--    배치용-->

    <select id="getStudentList" resultMap="StudentResultMap">
        SELECT std_id, std_name, std_num, std_birth, job_id, seed
        FROM student
        ORDER BY std_id
    </select>

    <select id="selectStudentProfile" parameterType="long" resultMap="StudentResultMap">
        select std_id, std_num, std_name, std_account, std_birth, job_id,seed
        from student
        where std_id = #{studentId}
    </select>

    <select id="selectRecentFiveDaysAttendance" parameterType="long" resultType="com.kb.student.dto.DailyCheckDTO">
        SELECT check_id, std_id, tch_id, check_date, isCheck
        FROM Daily_check
        WHERE std_id = #{studentId}
          AND check_date >= DATE_SUB(NOW(), INTERVAL 5 DAY)
        ORDER BY check_date DESC
    </select>

    <select id="selectStudentById" resultType="com.kb.student.domain.Student">
        select * from student where std_id = #{stdId};
    </select>

    <select id="selectStudentByUsernameAndStdName" resultType="com.kb.student.domain.Student">
        select * from student where std_account = #{username} and std_name = #{name};
    </select>

    <update id="updateStudentSeed">
        update student
        set seed = seed + #{changeSeed}
        where std_id = #{stdId};
    </update>


    <insert id="insertDailyCheck" parameterType="com.kb.student.dto.DailyCheckDTO">
        INSERT INTO Daily_check (std_id, tch_id, check_date, isCheck)
        VALUES (#{stdId}, #{tchId}, #{checkDate}, #{isCheck})
    </insert>



    <select id="getSeedRanking" resultType="com.kb.student.dto.SeedRankingDTO">
        SELECT std_name, seed
        FROM Student
        ORDER BY seed DESC
    </select>

    <select id="getSeedRankingThree" resultType="com.kb.student.dto.SeedRankingDTO">
        SELECT std_name, seed
        FROM Student
        ORDER BY seed DESC
            LIMIT 3
    </select>


    <insert id="insertCSVStudent" parameterType="com.kb.student.dto.StudentCsvDTO">
        INSERT INTO student (std_num, std_name, std_birth, job_id, seed, tch_id)
        VALUES (#{stdNum}, #{stdName}, #{stdBirth}, #{jobId}, #{seed}, #{tchId})
    </insert>


    <select id="getAllStudentsByTchAccount" resultType="com.kb.student.dto.StudentDTO">
        SELECT s.std_id, s.std_num, s.std_name, s.std_birth, s.job_id, s.seed, s.tch_id
        FROM student s
        JOIN teacher t
        ON s.tch_id = t.tch_id
        WHERE t.tch_account = #{userName};
    </select>

    <select id="getStudentSeed" resultType="com.kb.student.dto.SeedRankingDTO">
        SELECT std_id, std_name, seed
        FROM student
    </select>

    <select id="selectStudentByUsernameAndName" resultType="com.kb.student.dto.StudentDTO">
        select * from student where std_account = #{username} and std_name = #{name};
    </select>

    <insert id="insertStudent" parameterType="com.kb.student.dto.StudentDTO">
        INSERT INTO student (tch_id, std_num, std_name, std_birth, job_id, seed)
        VALUES (1,#{stdNum}, #{stdName}, #{stdBirth}, #{jobId}, #{seed});
    </insert>


    <update id="updateAllStudentSeed">
        UPDATE student SET seed = seed + #{pay}
    </update>

    <select id="getStudentCount" resultType="int">
        SELECT COUNT(*) FROM Student
    </select>

    <select id="selectStudentBaseSalary" resultType="com.kb.student.dto.StudentSalaryDTO">
        select std_id, seed
        from student s
        join job j on s.job_id = j.job_id
        where j.isPrime = 'N';
    </select>

    <select id="selectStudentAdditionalSalary" resultType="com.kb.student.dto.StudentSalaryDTO">
        select std_id, seed
        from student s
        join job j on s.job_id = j.job_id
        where j.isPrime = 'Y';
    </select>



    <update id="updateStudent" parameterType="com.kb.student.dto.StudentDTO">
        UPDATE student
        SET
            std_num = #{student.stdNum},
            std_name = #{student.stdName},
            std_birth = #{student.stdBirth},
            job_id = #{student.jobId},
            seed = #{student.seed}
        WHERE std_id = #{student.stdId}
    </update>

    <update id="updateStudentJob">
        UPDATE student SET job_Id = #{jobId} WHERE std_id = #{stdId}
    </update>
    <update id="updateStudentSalaryBatch">
        update student
        set seed = seed + #{baseSalary}
        where std_id = #{stdId}
    </update>

    <!--
        <update id="updateStudentInfo" parameterType="com.kb.student.dto.StudentDTO">
            UPDATE student
            SET std_name = #{stdName},
                std_birth = #{stdBirth},
                job_id = #{jobId},
                seed = #{seed}
            WHERE std_id = #{stdId}
        </update>
     -->
</mapper>